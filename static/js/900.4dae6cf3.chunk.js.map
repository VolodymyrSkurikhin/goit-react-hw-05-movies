{"version":3,"file":"static/js/900.4dae6cf3.chunk.js","mappings":"kNACA,EAA8B,0B,SCKf,SAASA,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAC7B,GAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OALAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAmBL,GAChBM,MAAK,SAAAC,GAAG,OAAIJ,EAAQI,EAAIL,SACxBM,OAAM,kBAAML,EAAQ,SACtB,CAACH,IACCE,EAGkB,IAAhBA,EAAKO,QACV,wBACGP,EAAKQ,KAAI,SAAAC,GAAK,OACb,0BACGA,EAAMC,eACL,gBACEC,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAKH,EAAMI,QAGf,cAAGC,UAAWC,EAAd,SAA8BN,EAAMI,QACpC,cAAGC,UAAWC,EAAd,SAA8BN,EAAMO,cAR7BP,EAAMQ,UAanB,8CAlBO","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"sectionText\":\"Cast_sectionText__aj4-z\"};","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport * as LoadData from '../LoadData';\nimport s from './Cast.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Cast({ movieId }) {\n  const [cast, setCast] = useState(null);\n  useEffect(() => {\n    LoadData.fetchCast(movieId)\n      .then(res => setCast(res.cast))\n      .catch(() => setCast(''));\n  }, [movieId]);\n  if (!cast) {\n    return <h3>No info,sorry...</h3>;\n  }\n  return cast.length !== 0 ? (\n    <ul>\n      {cast.map(actor => (\n        <li key={actor.id}>\n          {actor.profile_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n              alt={actor.name}\n            />\n          )}\n          <p className={s.sectionText}>{actor.name}</p>\n          <p className={s.sectionText}>{actor.character}</p>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <h4>No info,sorry...</h4>\n  );\n}\n\nCast.propTypes = {\n  movieId: PropTypes.string,\n};\n"],"names":["Cast","movieId","useState","cast","setCast","useEffect","LoadData","then","res","catch","length","map","actor","profile_path","src","alt","name","className","s","character","id"],"sourceRoot":""}