{"version":3,"file":"static/js/507.2aa44d84.chunk.js","mappings":"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","sources":["components/LoadData.js","webpack://react-homework-template/./src/components/Pages/MovieDetails/MovieDetails.module.css?729c","components/Pages/MovieDetails/MovieDetails.js"],"sourcesContent":["const BASE_URL = `https://api.themoviedb.org/4`;\nconst API_KEY = `api_key=a96c6afcb6324213a620b6851c83fc98`;\nasync function LoadData(url) {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(`Sorry,try later`));\n}\nexport function fetchTrendMovies() {\n  const result = LoadData(`${BASE_URL}/trending/movie/week?${API_KEY}`);\n  console.log(result);\n  return result;\n}\nexport function fetchMovieDetails(Id) {\n  const result = LoadData(`${BASE_URL}/movie/${Id}?${API_KEY}&language=en-US`);\n  console.log(result);\n  return result;\n}\nexport function fetchOnSearch(searchWord) {\n  const result = LoadData(\n    `${BASE_URL}/search/movie?query=${searchWord}&${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n  console.log(result);\n  return result;\n}\nexport function fetchCast(Id) {\n  const result = LoadData(\n    `${BASE_URL}/movie/${Id}/credits?${API_KEY}&language=en-US`\n  );\n  console.log(result);\n  return result;\n}\nexport function fetchReviews(Id) {\n  const result = LoadData(\n    `${BASE_URL}/movie/${Id}/reviews?${API_KEY}&language=en-US&page=1`\n  );\n  console.log(result);\n  return result;\n}\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n","// extracted by mini-css-extract-plugin\nexport default {\"detailContainer\":\"MovieDetails_detailContainer__12B0K\",\"leftContainer\":\"MovieDetails_leftContainer__Bk0yO\",\"rightContainer\":\"MovieDetails_rightContainer__SJFoY\",\"title\":\"MovieDetails_title__EiCyk\",\"release_date\":\"MovieDetails_release_date__+qiyL\",\"sectionText\":\"MovieDetails_sectionText__ybnph\",\"sectionTitle\":\"MovieDetails_sectionTitle__TOjuN\",\"link\":\"MovieDetails_link__US4Vb\",\"active\":\"MovieDetails_active__mkOYS\"};","import React, { useEffect, useState, lazy, Suspense } from 'react';\nimport {\n  Route,\n  useParams,\n  NavLink,\n  Routes,\n  useLocation,\n} from 'react-router-dom';\nimport * as LoadData from '../../../components/LoadData';\n// import Cast from '../../Cast/Cast';\n// import Reviews from '../../Reviews/Reviews';\nimport s from './MovieDetails.module.css';\n\nconst Cast = lazy(() =>\n  import('../../Cast/Cast' /* webpackChunkname: \"Cast\" */)\n);\nconst Reviews = lazy(() =>\n  import('../../Reviews/Reviews' /* webpackChunkname: \"Reviews\" */)\n);\n\nexport default function MovieDetails() {\n  const location = useLocation();\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    LoadData.fetchMovieDetails(movieId).then(res => setMovie(res));\n  }, [movieId]);\n  function takeGenres(entries) {\n    return entries.map(entry => entry.name).join(', ');\n  }\n  return (\n    movie && (\n      <>\n        <NavLink to={location.state?.from ?? '/movies'}>\n          <button type=\"button\">Go back</button>\n        </NavLink>\n        <div className={s.detailContainer}>\n          <div className={s.leftContainer}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt=\"Movie poster\"\n              className={s.poster}\n            />\n          </div>\n          <div className={s.rightContainer}>\n            <h1 className={s.title}>\n              {movie.original_title}\n              <span className={s.release_date}>\n                {movie.release_date.slice(0, 4)}\n              </span>\n            </h1>\n            <p className={s.sectionText}>\n              {`User score: ${(movie.vote_average * 10).toFixed()} %`}\n            </p>\n            <h2 className={s.sectionTitle}>Overview</h2>\n            <p className={s.sectionText}>{movie.overview}</p>\n            <h2 className={s.sectionTitle}>Genres</h2>\n            <p className={s.sectionText}>{takeGenres(movie.genres)}</p>\n          </div>\n        </div>\n        <hr />\n        <h2 className={s.sectionTitle}>Additional Information</h2>\n        <ul className={s.addInfoUl}>\n          <li className={s.addInfo}>\n            <NavLink\n              to=\"cast\"\n              state={{ from: location.state.from }}\n              className={({ isActive }) => (isActive ? s.active : s.link)}\n            >\n              Cast\n            </NavLink>\n          </li>\n          <li className={s.addInfo}>\n            <NavLink\n              to=\"reviews\"\n              state={{ from: location.state.from }}\n              className={({ isActive }) => (isActive ? s.active : s.link)}\n            >\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n        <hr />\n        <Suspense fallback={<h3>Loading...</h3>}>\n          <Routes>\n            <Route path=\"cast\" element={<Cast movieId={movieId} />} />\n            <Route path=\"reviews\" element={<Reviews movieId={movieId} />} />\n          </Routes>\n        </Suspense>\n      </>\n    )\n  );\n}\n"],"names":["BASE_URL","API_KEY","LoadData","url","fetch","response","ok","json","Promise","reject","Error","fetchTrendMovies","result","console","log","fetchMovieDetails","Id","fetchOnSearch","searchWord","fetchCast","fetchReviews","Cast","lazy","Reviews","MovieDetails","entries","location","useLocation","useState","movie","setMovie","movieId","useParams","useEffect","then","res","to","state","from","type","className","s","src","poster_path","alt","original_title","release_date","slice","vote_average","toFixed","overview","genres","map","entry","name","join","isActive","Suspense","fallback","path","element"],"sourceRoot":""}