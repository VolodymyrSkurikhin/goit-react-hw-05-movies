{"version":3,"file":"static/js/502.1a21660d.chunk.js","mappings":"qSAAMA,EAAQ,+BACRC,EAAO,2CAAb,SACeC,EAAS,GAATA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAwBC,GAAxB,uFACyBC,MAAMD,GAD/B,YACQE,EADR,QAEkBC,GAFlB,gCAGYD,EAASE,OAHrB,+CAIMC,QAAQC,OAAO,IAAIC,MAAJ,oBAJrB,0GAMO,SAASC,IACd,IAAMC,EAASV,EAAS,GAAD,OAAIF,EAAJ,gCAAoCC,IAE3D,OADAY,QAAQC,IAAIF,GACLA,EAEF,SAASG,EAAkBC,GAChC,IAAMJ,EAASV,EAAS,GAAD,OAAIF,EAAJ,kBAAsBgB,EAAtB,YAA4Bf,EAA5B,oBAEvB,OADAY,QAAQC,IAAIF,GACLA,EAEF,SAASK,EAAcC,GAC5B,IAAMN,EAASV,EAAS,GAAD,OAClBF,EADkB,+BACakB,EADb,YAC2BjB,EAD3B,+CAIvB,OADAY,QAAQC,IAAIF,GACLA,EAEF,SAASO,EAAUH,GACxB,IAAMJ,EAASV,EAAS,GAAD,OAClBF,EADkB,kBACAgB,EADA,oBACcf,EADd,oBAIvB,OADAY,QAAQC,IAAIF,GACLA,EAEF,SAASQ,EAAaJ,GAC3B,IAAMJ,EAASV,EAAS,GAAD,OAClBF,EADkB,kBACAgB,EADA,oBACcf,EADd,2BAIvB,OADAY,QAAQC,IAAIF,GACLA,I,iFCpCT,EAA4D,4B,SCI7C,SAASS,EAAT,GAAoC,IAAfC,EAAc,EAAdA,WAC5BC,GAAWC,EAAAA,EAAAA,MACjBX,QAAQC,IAAIS,GACZ,IAAME,EAAOF,EAASG,SAASC,SAAS,WAAa,GAAK,UAC1D,OACE,wBACGL,EAAWM,KAAI,SAAAC,GAAK,OACnB,yBACE,SAAC,KAAD,CACEC,UAAWC,EACXC,GAAE,UAAKP,GAAL,OAAYI,EAAMI,IACpBC,MAAO,CAAEC,KAAMZ,GAHjB,SAKGM,EAAMO,SANFP,EAAMI,W,kHCXvB,K,SCKe,SAASI,IAAU,IAAD,EAC/B,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACIC,EAAa,UAAGF,EAAYG,IAAI,gBAAnB,QAA+B,GAChD,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KA0BA,OAzBAC,EAAAA,EAAAA,YAAU,WACc,KAAlBP,GAIJvC,EAAAA,GAAuBuC,GACpBQ,MAAK,SAAAC,GAAG,OAAIL,EAAUK,EAAIC,YAC1BC,OAAM,kBAAMP,EAAU,SACxB,CAACJ,KAkBF,iCACE,kBAAMX,UAAWC,EAAAA,KAAQsB,SAlB7B,SAAwBC,GACtBA,EAAEC,iBACF1C,QAAQ2C,IAAIF,EAAEG,eACqC,KAA/CH,EAAEG,cAAcC,SAASC,YAAYC,OAIzCpB,EAAe,CACbqB,MAAOP,EAAEG,cAAcC,SAASC,YAAYC,QAE9CN,EAAEG,cAAcK,SANdC,MAAM,0BAcN,WACE,kBACEC,KAAK,cACLJ,MAAOd,EACPmB,KAAK,OACLnC,UAAWC,EAAAA,MACXmC,SAXR,SAAuBZ,GACrBP,EAAUO,EAAEa,OAAOP,MAAMQ,YAYrB,mBAAQH,KAAK,SAASnC,UAAWC,EAAAA,OAAjC,uBAIDa,GAA4B,IAAlBA,EAAOyB,QAChB,gDAAsB5B,EAAtB,sBAEAG,IAAU,SAACvB,EAAA,EAAD,CAAWC,WAAYsB","sources":["components/LoadData.js","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.js","components/Pages/Movies/Movies.module.css","components/Pages/Movies/Movies.js"],"sourcesContent":["const BASE_URL = `https://api.themoviedb.org/3`;\nconst API_KEY = `api_key=a96c6afcb6324213a620b6851c83fc98`;\nasync function LoadData(url) {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(`Sorry,try later`));\n}\nexport function fetchTrendMovies() {\n  const result = LoadData(`${BASE_URL}/trending/movie/week?${API_KEY}`);\n  console.log(result);\n  return result;\n}\nexport function fetchMovieDetails(Id) {\n  const result = LoadData(`${BASE_URL}/movie/${Id}?${API_KEY}&language=en-US`);\n  console.log(result);\n  return result;\n}\nexport function fetchOnSearch(searchWord) {\n  const result = LoadData(\n    `${BASE_URL}/search/movie?query=${searchWord}&${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n  console.log(result);\n  return result;\n}\nexport function fetchCast(Id) {\n  const result = LoadData(\n    `${BASE_URL}/movie/${Id}/credits?${API_KEY}&language=en-US`\n  );\n  console.log(result);\n  return result;\n}\nexport function fetchReviews(Id) {\n  const result = LoadData(\n    `${BASE_URL}/movie/${Id}/reviews?${API_KEY}&language=en-US&page=1`\n  );\n  console.log(result);\n  return result;\n}\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MovieList_title__QyMtJ\",\"listLink\":\"MovieList_listLink__EbNXd\"};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport s from './MovieList.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function MovieList({ moviesData }) {\n  const location = useLocation();\n  console.log(location);\n  const path = location.pathname.includes('/movies') ? '' : 'movies/';\n  return (\n    <ul>\n      {moviesData.map(movie => (\n        <li key={movie.id}>\n          <Link\n            className={s.listLink}\n            to={`${path}${movie.id}`}\n            state={{ from: location }}\n          >\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nMovieList.propTypes = {\n  moviesData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import React, { useEffect, useState } from 'react';\nimport MovieList from 'components/MovieList/MovieList';\nimport * as LoadData from '../../LoadData.js';\nimport { useSearchParams } from 'react-router-dom';\nimport s from './Movies.module.css';\n\nexport default function Movies() {\n  const [searchParam, setSearchParam] = useSearchParams();\n  let currentSearch = searchParam.get('query') ?? '';\n  const [movies, setMovies] = useState(null);\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    if (currentSearch === '') {\n      return;\n    }\n\n    LoadData.fetchOnSearch(currentSearch)\n      .then(res => setMovies(res.results))\n      .catch(() => setMovies(''));\n  }, [currentSearch]);\n  function onButtonSubmit(e) {\n    e.preventDefault();\n    console.dir(e.currentTarget);\n    if (e.currentTarget.elements.searchInput.value === '') {\n      alert('Enter search, please!');\n      return;\n    }\n    setSearchParam({\n      query: e.currentTarget.elements.searchInput.value,\n    });\n    e.currentTarget.reset();\n    // LoadData.fetchOnSearch(search).then(res => setMovies(res.results));\n  }\n  function onChangeInput(e) {\n    setSearch(e.target.value.trim());\n  }\n  return (\n    <>\n      <form className={s.form} onSubmit={onButtonSubmit}>\n        <input\n          name=\"searchInput\"\n          value={search}\n          type=\"text\"\n          className={s.input}\n          onChange={onChangeInput}\n        />\n        <button type=\"submit\" className={s.button}>\n          Search\n        </button>\n      </form>\n      {movies && movies.length === 0 ? (\n        <h3>{`We don't have ${currentSearch} movie, sorry...`}</h3>\n      ) : (\n        movies && <MovieList moviesData={movies} />\n      )}\n    </>\n  );\n}\n"],"names":["BASE_URL","API_KEY","LoadData","url","fetch","response","ok","json","Promise","reject","Error","fetchTrendMovies","result","console","log","fetchMovieDetails","Id","fetchOnSearch","searchWord","fetchCast","fetchReviews","MovieList","moviesData","location","useLocation","path","pathname","includes","map","movie","className","s","to","id","state","from","title","Movies","useSearchParams","searchParam","setSearchParam","currentSearch","get","useState","movies","setMovies","search","setSearch","useEffect","then","res","results","catch","onSubmit","e","preventDefault","dir","currentTarget","elements","searchInput","value","query","reset","alert","name","type","onChange","target","trim","length"],"sourceRoot":""}